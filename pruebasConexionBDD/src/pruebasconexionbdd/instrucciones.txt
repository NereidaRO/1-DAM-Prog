Tras una b√∫squeda en learn.microsoft y StackOverflow en la que no me he enterado de nada y unas clases en las que no he entendido ni 
3 palabras seguidas, he optado por preguntarle esto a ChatGPT:

"En clase estamos intentando conectar una base de datos local, generada en MS SQL Server, con Eclipse o NetBeans, 
con la intenci√≥n de poder coger datos de la base de datos o mandar nuevos registros mediante un programa que creemos con Java. 
Mi problema es que no encuentro c√≥mo hacer esa conexi√≥n".

La IA me ha respondido:

Para conectar una base de datos de **MS SQL Server** con **Java** en **Eclipse o NetBeans**, necesitas seguir estos pasos:

---

### **1Ô∏è‚É£ Descargar y a√±adir el conector JDBC**
Para que Java pueda interactuar con SQL Server, necesitas el **controlador JDBC de Microsoft**.

üîπ **Descarga el JDBC Driver:**
1. Ve a [Microsoft JDBC Driver for SQL Server](https://learn.microsoft.com/es-es/sql/connect/jdbc/microsoft-jdbc-driver-for-sql-server).
2. Descarga la versi√≥n m√°s reciente.
3. Extrae el archivo `.zip` y dentro encontrar√°s `mssql-jdbc-xx.x.x.jreXX.jar` (elige el de tu versi√≥n de Java).

üîπ **A√±adirlo en Eclipse o NetBeans:**
- En **Eclipse**:
  1. Click derecho en tu proyecto ‚ûù **Build Path** ‚ûù **Configure Build Path**.
  2. Ve a la pesta√±a **Libraries** ‚ûù **Add External JARs**.
  3. Busca y selecciona `mssql-jdbc-xx.x.x.jreXX.jar`.
  4. Aplica los cambios.

- En **NetBeans**:
  1. Click derecho en **Libraries** dentro de tu proyecto.
  2. Selecciona **Add JAR/Folder**.
  3. A√±ade el `mssql-jdbc-xx.x.x.jreXX.jar`.

---

### **2Ô∏è‚É£ Habilitar la autenticaci√≥n en SQL Server**
üîπ **M√©todo 1: Autenticaci√≥n con usuario y contrase√±a**
Aseg√∫rate de que SQL Server acepta autenticaci√≥n con usuario y contrase√±a:
1. Abre **SQL Server Management Studio (SSMS)**.
2. Click derecho en tu servidor ‚ûù **Propiedades**.
3. Ve a **Seguridad** ‚ûù Activa **Modo de autenticaci√≥n SQL Server y Windows**.
4. Reinicia el servidor.

üîπ **M√©todo 2: Usar autenticaci√≥n integrada**
Si usas autenticaci√≥n de Windows, necesitar√°s el `integratedSecurity=true` en la URL de conexi√≥n.

---

### **3Ô∏è‚É£ Crear la conexi√≥n en Java**
Aqu√≠ tienes un ejemplo de c√≥digo Java para conectarte a SQL Server desde Eclipse o NetBeans:

#### **Ejemplo con usuario y contrase√±a**
```java
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;

public class ConexionSQL {
    public static void main(String[] args) {
        // Datos de la conexi√≥n
        String url = "jdbc:sqlserver://localhost:1433;databaseName=NombreDeTuBD";
        String usuario = "tu_usuario";
        String contrase√±a = "tu_contrase√±a";

        try {
            // Cargar el driver
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            
            // Conectar a la base de datos
            Connection conexion = DriverManager.getConnection(url, usuario, contrase√±a);
            System.out.println("Conexi√≥n exitosa a la base de datos.");
            
            // Cierra la conexi√≥n
            conexion.close();
        } catch (ClassNotFoundException e) {
            System.out.println("Error: No se encontr√≥ el driver JDBC.");
            e.printStackTrace();
        } catch (SQLException e) {
            System.out.println("Error: No se pudo conectar a la base de datos.");
            e.printStackTrace();
        }
    }
}
```

#### **Ejemplo con autenticaci√≥n de Windows**
Si usas autenticaci√≥n integrada de Windows, usa esta URL de conexi√≥n:
```java
String url = "jdbc:sqlserver://localhost:1433;databaseName=NombreDeTuBD;integratedSecurity=true";
```
‚ö† Para esto, el driver JDBC debe estar en la carpeta de **Java bin** y necesitas el archivo `.dll` de autenticaci√≥n.

---

### **4Ô∏è‚É£ Resolver posibles errores**
üí° **Si obtienes un error de conexi√≥n:**
- **Verifica el puerto** de SQL Server: Abre SSMS y ejecuta:
  ```sql
  SELECT local_net_address, local_tcp_port FROM sys.dm_exec_connections
  ```
- **Activa TCP/IP en SQL Server Configuration Manager**:
  1. Abre **SQL Server Configuration Manager**.
  2. Ve a **Protocols for SQL Server**.
  3. Activa **TCP/IP** y reinicia el servicio.

---

### **5Ô∏è‚É£ Realizar consultas SQL desde Java**
Despu√©s de conectar, puedes ejecutar consultas:

#### **Ejemplo de consulta SELECT**
```java
import java.sql.*;

public class ConsultaSQL {
    public static void main(String[] args) {
        String url = "jdbc:sqlserver://localhost:1433;databaseName=NombreDeTuBD";
        String usuario = "tu_usuario";
        String contrase√±a = "tu_contrase√±a";

        try (Connection conexion = DriverManager.getConnection(url, usuario, contrase√±a);
             Statement stmt = conexion.createStatement();
             ResultSet rs = stmt.executeQuery("SELECT * FROM tu_tabla")) {
            
            while (rs.next()) {
                System.out.println("ID: " + rs.getInt("id") + ", Nombre: " + rs.getString("nombre"));
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }
}
```

#### **Ejemplo de INSERT**
```java
try (Connection conexion = DriverManager.getConnection(url, usuario, contrase√±a);
     PreparedStatement pstmt = conexion.prepareStatement("INSERT INTO tu_tabla (nombre) VALUES (?)")) {

    pstmt.setString(1, "NuevoNombre");
    pstmt.executeUpdate();
    System.out.println("Registro insertado correctamente.");
} catch (SQLException e) {
    e.printStackTrace();
}
```

---

### **Resumen**
‚úÖ Descarga el **driver JDBC** y agr√©galo a Eclipse o NetBeans.  
‚úÖ Configura **SQL Server** para permitir autenticaci√≥n con usuario y contrase√±a o integrada.  
‚úÖ Usa la clase `DriverManager` para conectar tu base de datos.  
‚úÖ Ejecuta consultas usando `Statement` o `PreparedStatement`.

¬øTienes alg√∫n error espec√≠fico en tu c√≥digo o configuraci√≥n? Puedo ayudarte a depurarlo. üöÄ
